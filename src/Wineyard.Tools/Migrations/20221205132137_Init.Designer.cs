// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Wineyard.Models;

#nullable disable

namespace Wineyard.Tools.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20221205132137_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Wineyard.Models.Grape", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("WineId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("WineId");

                    b.ToTable("Grapes");
                });

            modelBuilder.Entity("Wineyard.Models.Wine", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<int>("Vintage")
                        .HasColumnType("integer");

                    b.Property<string>("WineryName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("Id");

                    b.ToTable("Wines");
                });

            modelBuilder.Entity("Wineyard.Models.Grape", b =>
                {
                    b.HasOne("Wineyard.Models.Wine", null)
                        .WithMany("Grapes")
                        .HasForeignKey("WineId");
                });

            modelBuilder.Entity("Wineyard.Models.Wine", b =>
                {
                    b.Navigation("Grapes");
                });
#pragma warning restore 612, 618
        }
    }
}
